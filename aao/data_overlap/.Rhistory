?read_html
vest <- read_html(str(content(post)));
vest <- read_html(str(content(dave)));
?read_html
vest <- read_html(str(content(dave, as="text")));
vest <- html(str(content(dave, as="text")));
vest <- read_html(str(content(dave, as="text")));
vest <- read_html(str(content(dave, as="text", type="text/html")));
vest <- read_html(content(dave, as="text", type="text/html"));
form <- html_nodes("#page-node-form");
html_nodes("#page-node-form");
vest <- read_html(str(content(dave, as="text", type="text/html")));
vest <- read_html(str(content(dave, "text", type="text/html")));
vest <- read_html(str(content(dave, "text"));
vest <- read_html(str(content(dave, "text")));
vest <- read_html(content(dave, "text"));
form <- html_nodes("#page-node-form");
stringi::stri_enc_detect(content(r, "raw"))?content
?content
vest <- read_html(content(dave, "parsed"));
vest <- content(dave, "parsed");
vest <- content(dave, "parsed", encoding="UTF-8");
vest <- content(dave, "text", encoding="UTF-8");
vest <- read_html(content(dave, "text", encoding="UTF-8"));
vest <- read_html(str(content(dave, "text", encoding="UTF-8")));
vest <- str(content(dave, "text", encoding="UTF-8"));
vest <- content(dave, "text", encoding="UTF-8");
?strpos
?string
StrPos
?StrPos
install.packages("DescTools");
stringi::stri_enc_detect(content(r, "raw"))
?StrPos
library(DescTools);
?StrPos
debugSource('~/Scripts/drupalR/drupal.R')
drupalr.addNode(h, "page");
debugSource('~/Scripts/drupalR/drupal.R')
debugSource('~/Scripts/drupalR/drupal.R')
drupalr.addNode(h, "page");
debugSource('~/Scripts/drupalR/drupal.R')
drupalr.addNode(h, "page");
debugSource('~/Scripts/drupalR/drupal.R')
drupalr.addNode(h, "page");
source('~/Scripts/drupalR/drupal.R')
source('~/Scripts/drupalR/drupal.R')
source('~/Scripts/bioacousticaR/R/bioacoustica.R')
source('~/Scripts/bioacousticaR/R/bioacoustica.R')
bioacoustica.listTypes()
source('~/Scripts/bioacousticaR/R/bioacoustica.R')
bioacoustica.getAnnotations();
source('~/Scripts/bioacousticaR/R/bioacoustica.R')
source('~/Scripts/bioacousticaR/R/bioacoustica.R')
source('~/.active-rstudio-document')
wave <- bioacoustica.tools.loadWaveDemo();
length(wave);
source('~/.active-rstudio-document')
bioacoustica.tools.getDuration(wave);
duration(wave);
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/.active-rstudio-document')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/.active-rstudio-document')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/.active-rstudio-document')
bioacoustica.tools.processWindow(wave, 1, 1);
View(bioacoustica.tools.getDuration)
View(bioacoustica.tools.getDuration)
View(bioacoustica.tools.getDuration)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
bioacoustica.tools.processWindow(wave, 1, 1);
?foreach
install.packages("foreach");
if (window_start + increment > duration(wave, f=f)) {
hit_end <- TRUE;
}
?apply
?lapply
source('~/Scripts/BioAcouticaR-tools/tools.R')
source('~/Scripts/BioAcouticaR-tools/tools.R')
source('~/Scripts/BioAcouticaR-tools/tools.R')
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
functions <- list("bioacoustica.tools.getDuration");
functions[0];
functions[1];
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
functions[1];
functions[1];
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
functions[1];
functions[[1];
functions[[1]];
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
functions[[1]](wave);
$functions[[1]](wave);
functions[[1]]
match.fun(functions[[1]]);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
source('~/Scripts/BioAcouticaR-tools/tools.R')
source('~/Scripts/BioAcouticaR-tools/tools.R')
source('~/Scripts/BioAcouticaR-tools/tools.R')
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
?apply
source('~/Scripts/BioAcouticaR-tools/tools.R')
?apply
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
print(typeof(wave));
Wave(wave);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
Wave(wave);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
Wave(wave);
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
?inputw
?cutw
source('~/Scripts/BioAcouticaR-tools/tools.R')
?cutw
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
dfreq(wave, f);
?dfreq
dfreq(wave, f, plot=FALSE);
source('~/Scripts/BioAcouticaR-tools/tools.R')
wave <- bioacoustica.tools.loadWaveDemo()
source('~/Scripts/BioAcouticaR-tools/tools.R')
wave <- bioacoustica.tools.loadWaveDemo();
dfreq(wave, f, plot=FALSE);
dfreq(wave, f);
oscillo(wave, f);
dfreq(wave, f);
?dfreq
data <- dfreq(wave, f);
data[,3]
data[,2]
count(data[,3]);
length(data[,3]);
length(data);
col <- data[,3];
data[,3];
count(data[,2]);
length(data[,2]);
typeof(data);
typeof(data[,3]);
typeof(data[,2]);
length(data[,2], na.rm=TRUE);
data[,2 > 1];
View(data)
data[,y > 1];
View(data)
type(data)
col <- data[,2];
typeof(col);
typeof(col[1]);
subset(data, y > 1);
subset(data, 'y'> 1);
subset(data, 'y'> 1);
subset(data, 2);
frame <- data.frame(data);
frame[,2];
subset(frame, y > 1);
subset(frame, y > 5);
frame
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
bioacoustica.tools.processWindow(wave, 1, 1);
View(frame)
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
n
c
source('~/Scripts/BioAcouticaR-tools/tools.R')
c
bioacoustica.tools.processWindow(wave, 1, 1);
bioacoustica.tools.processWindow(wave, 1, 1);
row <- c(number = number, start = start, end = end, duration = bioacoustica.tools.getDuration(wave, f), ACI = ACI(wave, f), df = bioacoustica.tools.dfreq_above5k(wave,f));
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
bioacoustica.tools.processWindow(wave, 1, 1);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 1);
bioacoustica.tools.processWindow(wave, 1, 5);
bioacoustica.tools.processWindow(wave, 0.1, 0.01);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 5);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 5);
source('~/Scripts/BioAcouticaR-tools/tools.R')
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 5);
source('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 5);
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 5);
View(frame)
View(frame)
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 5);
c
debugSource('~/Scripts/BioAcouticaR-tools/tools.R')
bioacoustica.tools.processWindow(wave, 1, 5);
source('~/Scripts/BioAcouticaR-tools/tools.R')
wave <- bioacoustica.tools.loadWaveDemo();
duration(wave);
bioacoustica.tools.processWindow(wave, 10, 2);
bioacoustica.tools.processWindow(wave, 1, 5);
?c
library(Rserve)
Rserve()
Rserve(args="--no-save")
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
wave <- bioacoustica.tools.loadWaveDemo();
data <- bioacoustica.biovel.window(wave, 1, 10);
library(seewave);
data <- bioacoustica.biovel.window(wave, 1, 10);
data <- eval(parse(bioacoustica.biovel.window(wave, 1, 10)));
data <- parse(bioacoustica.biovel.window(wave, 1, 10));
library(tuneR);
data <- parse(bioacoustica.biovel.window(wave, 1, 10));
data <- parse(text=bioacoustica.biovel.window(wave, 1, 10));
data <- parse(text=bioacoustica.biovel.window(wave, 1, 10));
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- parse(text=bioacoustica.biovel.window("test.wav", 1, 10));
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- parse(text=bioacoustica.biovel.window("test.wav", 1, 10));
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- parse(text=bioacoustica.biovel.window("test.wav", 1, 10));
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- bioacoustica.biovel.window("test.wav", 1, 10);
install_github(bioacoustica/biouacousticar-tools)
library(devtools);
install_github(bioacoustica/biouacousticar-tools)
install_github("bioacoustica/biouacousticar-tools")
install_github("bioacoustica/BioAcousticaR-tools")
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
library(bioacousticaRtools)
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- parse(text=bioacoustica.biovel.window("test.wav", 1, 10));
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- parse(text=bioacoustica.biovel.window("test.wav", 1, 10));
setwd("~/")
data <- parse(text=bioacoustica.biovel.window("test.wav", 1, 10));
debugSource('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- parse(text=bioacoustica.biovel.window("test.wav", 1, 10));
file <- "https://dl.dropboxusercontent.com/u/46267592/chimes.wav";
data <- parse(text=bioacoustica.biovel.window(file, 1, 10));
debugSource('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
debugSource('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
debugSource('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- parse(text=bioacoustica.biovel.window(file, 1, 10));
debugSource('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
debugSource('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
debugSource('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- parse(text=bioacoustica.biovel.window(file, 1, 10));
data <- parse(text=bioacoustica.biovel.window(file, 1, 10));
data <- parse(text=bioacoustica.biovel.window(file, 1, 10));
library(tuneR)
library(seewave)
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
debugSource('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- parse(text=bioacoustica.biovel.window(file, 1, 10));
infile <- "https://dl.dropboxusercontent.com/u/46267592/chimes.wav"
data <- parse(text=bioacoustica.biovel.window(infile, 1, 10));
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- parse(text=bioacoustica.biovel.window(infile, 1, 10));
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- parse(text=bioacoustica.biovel.window(infile, 1, 10));
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
data <- bioacoustica.biovel.window(infile, 1, 10);
readLines(infile, n = 1, warn = FALSE)
library(Rserve)
Rserve(args="--no-save")
Rserve(args="--no-save")
source('~/Scripts/BioAcouticaR-tools/R/bioacoustica.tools.window.R')
View(download)
library(bioacousticaRtools)
library(Rserve)
Rserve(args="--no-save")
library(soundecology)
install.packages("soundecology")
library(soundecology)
library(devtools);
install_github("BioAcoustica/BioAcousticaR-tools");
install.packages("devtools")
library(devtools);
install_github("BioAcoustica/BioAcousticaR-tools");
library(devtools);
install.packages"git2r")
install.packages("git2r")
install.packages("devtools")
install.packages("git2r")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
names[1]
View(taxa)
taxa[1]
taxa[,1]
taxa["Rank"]
taxa["Rank",1]
taxa[1,"Rank"]
taxa[1,]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
intersect(names, ba_names)
pwd()
setwd("~/AAO/Data Overlap Script")
source('~/AAO/Data Overlap Script/data_overlap.R')
install.packages("xlsx")
install.packages("rJava")
install.packages("rJava")
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
View(traits)
source('~/AAO/Data Overlap Script/data_overlap.R')
traits[,"SPECIES"]
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
intersect(names, intersect(ba_names, traits_names))
intersect(names, traits_names)
intersect(traits_names, names)
intersect(ba_names, names)
intersect(traits_names, ba_names)
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
install.packlages("VennDiagram")
install.packages("VennDiagram")
length(ba_names)
source('~/AAO/Data Overlap Script/data_overlap.R')
length(ba_names)
nrows(ba_names)
nrow(ba_names)
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
nrow(intersect(ba_names, strk_names))
nrow(intersect(ba_names, stk_names))
interscet(ba_names, stk_names)
intersect(ba_names, stk_names)
View(ba_names)
source('~/AAO/Data Overlap Script/data_overlap.R')
intersect(ba_names, stk_names)
nrow(intersect(ba_names, stk_names))
length(intersect(ba_names, stk_names))
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
nrow(stk_names)
length(stk_names)
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
install_packages("GridArrange")
install_packages("GridArrange")
install.packages("GridArrange")
install.packages("gridArrange")
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
demo
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
demo
source('~/AAO/Data Overlap Script/data_overlap.R')
demo
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
setwd("~/AAO/Data Overlap Script")
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
start <- i + 2;
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
stk_names = c(names, gsub("_", " ", gsub("^\\s+|\\s+$", "", stk_file[i])));
stk_names = c(names, gsub("_", " ", gsub("^\\s+|\\s+$", "", stk_file[i])));
stk_names = c(names, gsub("_", " ", gsub("^\\s+|\\s+$", "", stk_file[i])));
stk_names = c(names, gsub("_", " ", gsub("^\\s+|\\s+$", "", stk_file[i])));
stk_names = c(names, gsub("_", " ", gsub("^\\s+|\\s+$", "", stk_file[i])));
stk_names = c(names, gsub("_", " ", gsub("^\\s+|\\s+$", "", stk_file[i])));
debugSource('~/AAO/Data Overlap Script/data_overlap.R')
debugSource('~/AAO/Data Overlap Script/data_overlap.R')
Q
debugSource('~/AAO/Data Overlap Script/data_overlap.R')
debugSource('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
demo
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
source('~/AAO/Data Overlap Script/data_overlap.R')
View(test)
